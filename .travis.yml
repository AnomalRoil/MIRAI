language: generic
cache:
  # Cache the global cargo directory, but NOT the local `target` directory which
  # we cannot reuse anyway when the nightly changes (and it grows quite large
  # over time).
  directories:
  - /home/travis/.cargo

os:
- linux

before_script:
# Compute the rust version we use. We do not use "language: rust" to have more control here.
- |
  if [ "$TRAVIS_EVENT_TYPE" = cron ]; then
    RUST_TOOLCHAIN=nightly
  else
    RUST_TOOLCHAIN=$(cat rust-version)
  fi
# install Rust
- curl https://build.travis-ci.org/files/rustup-init.sh -sSf | sh -s -- -y --default-toolchain "$RUST_TOOLCHAIN"
- export PATH=$HOME/.cargo/bin:$PATH
- rustc --version
# install formatter
- rustup component add rustfmt-preview
# install linter
- rustup component add clippy-preview

script:
# Exit immediately if a command exits with a non-zero status.
- set -e
# Run format checks
- cargo fmt --all -- --check
# Run lint checks
- cargo clippy -- -D warnings
# Build
- cargo build
# Run unit and integration tests
- cargo test
# Run mirai on itself
- cargo install --force --path .
- cargo clean
- export RUSTC_WRAPPER=mirai
- cargo build

notifications:
  email:
    on_success: never
branches:
  only:
  - master
env:
  global:
  - RUST_TEST_NOCAPTURE=1